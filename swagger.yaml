swagger: "2.0"
info:
  description: Image modifications in Direktiv
  title: image-magick
  version: "1.0"
  x-direktiv-meta:
    container: gcr.io/direktiv/functions/image-magick
    maintainer: |-
      [direktiv.io](https://www.direktiv.io) 
    issues: https://github.com/direktiv-apps/image-magick/issues
    url: https://github.com/direktiv-apps/image-magick  
    categories:
    - tools
    license: |-
      [Apache-2.0](https://www.apache.org/licenses/LICENSE-2.0)
    long-description: >-
      This app can run multiple [Image Magick](https://imagemagick.org/index.php) commands. 
      The results can either be stored in the output folder of Direktiv to store them as variables or returned as base64.
consumes:
- application/json
produces:
- application/json
schemes:
- http
paths:
  /: 
    delete:
      parameters:
        - name: Direktiv-ActionID
          in: header
          type: string
          description: |
            On cancel Direktiv sends a DELETE request to
            the action with id in the header
      x-direktiv:
        cancel: echo 'cancel {{ .DirektivActionID }}'
      responses:
        200:
    post:
      parameters:
        - name: Direktiv-ActionID
          in: header
          type: string
          default: development
          description: |
            direktiv action id is an UUID. 
            For development it can be set to 'development'
        - name: Direktiv-TempDir
          in: header
          type: string
          default: /tmp
          description: |
            direktiv temp dir is the working directory for that request
            For development it can be set to e.g. '/tmp'
        - name: body
          in: body
          schema:
            type: object
            properties:
              files:
                type: array
                items:
                  $ref: '#/definitions/direktivFile'
                description: File to create before running commands.
                default: []
              return:
                type: array
                items:
                  type: string
                example: myimage.jpg
                description: Returns the images as base64
              commands:
                type: array
                description: Array of commands.
                items:
                  type: object
                  properties:
                    command:
                      type: string
                      description: Command to run
                    silent: 
                      type: boolean
                      description: If set to false the command will not print output to logs.
                      default: false
                    print: 
                      type: boolean
                      description: If set to false the command will not print the full command with arguments to logs.
                      default: true
                    continue: 
                      type: boolean
                      description: Stops excecution if command fails, otherwise proceeds with next command 
                default: 
                - command: echo Hello
      # direktiv code generation is configured here
      x-direktiv-function: |-
        functions:
        - id: image-magick
          image: gcr.io/direktiv/functions/image-magick:1.0
          type: knative-workflow
      x-direktiv-examples:
        # ADD MORE EXAMPLES HERE
        - title: Basic
          content: |-
            - id: image-magick
              type: action
              action:
                function: image-magick
                input: 
                  commands:
                  - command: 'convert mypic.png json:'
                  - command: convert mypic.png -fuzz 25% -fill red -opaque white -flatten mypic.png
                  - command: convert mypic.png -resize 200x100 mypic.jpg
        - title: Advanced
          content: |-
            - id: modify 
              type: action
              action:
                function: image
                input: 
                  commands:
                  # stores the image in workflow scope variable `resized.png`
                  - convert mypic.png -resize 200% out/workflow/resized.png 
              catch: 
              - error: "*"
      x-direktiv:  
        cmds:
        - action: foreach
          loop: .Commands
          exec: '{{ .Item.Command }}'
          silent: '{{ .Item.Silent }}'
          print: '{{ .Item.Print }}'
          continue: '{{ .Item.Continue }}'
        - action: foreach
          loop: .Return
          exec: 'base64 -w 0 {{ .Item }}'
          # silent: true
        output: |
          {
            "image-magick": {{ index . 0 | toJson }}
            {{ $l := len (index . 1) }}
            {{- if gt $l 0 }}
            , "images": {{ index . 1 | toJson }}
            {{- end }}
          }
      x-direktiv-errors:
        io.direktiv.command.error: Command execution failed
        io.direktiv.output.error: Template error for output generation of the service
        io.direktiv.ri.error: Can not create information object from request
      responses:
        200:
          description: List of executed commands.
          examples:
            image-magick:
            - result: # EXAMPLE RESULT HERE
              success: true
            - result: #  EXAMPLE RESULT HERE
              success: true
          schema:
          schema:
            type: object
            properties:
              images:
                type: array
                items:
                  type: object
                  required:
                  - success
                  - result
                  properties:
                    success:
                      type: boolean
                    result:
                      additionalProperties: {}
              image-magick:
                type: array
                items:
                  type: object
                  required:
                  - success
                  - result
                  properties:
                    success:
                      type: boolean
                    result:
                      additionalProperties: {}
        default:
          description: generic error response
          headers:
            Direktiv-ErrorCode:
              type: string
            Direktiv-ErrorMessage:
              type: string
          schema:
            $ref: "#/definitions/error"
definitions:
  direktivFile:
    type: object
    x-go-type:
      type: DirektivFile
      import:
        package: github.com/direktiv/apps/go/pkg/apps 
  error:
    type: object
    required:
      - errorCode
      - errorMessage
    properties:
      errorCode:
        type: string
      errorMessage:
        type: string
